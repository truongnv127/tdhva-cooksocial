{"ast":null,"code":"import _objectSpread from \"/home/truongnvops/Documents/Project_AWS/tdhva-cooksocial/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants.mjs';\nimport { AmplifyError } from '../errors/AmplifyError.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' ? Symbol('amplify_default') : '@@amplify_default';\nconst logger = new ConsoleLogger('Hub');\nclass HubClass {\n  constructor(name) {\n    this.listeners = new Map();\n    this.protectedChannels = ['core', 'auth', 'api', 'analytics', 'interactions', 'pubsub', 'storage', 'ui', 'xr'];\n    this.name = name;\n  }\n  /**\n   * Used internally to remove a Hub listener.\n   *\n   * @remarks\n   * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n   */\n  _remove(channel, listener) {\n    const holder = this.listeners.get(channel);\n    if (!holder) {\n      logger.warn(\"No listeners for \".concat(channel));\n      return;\n    }\n    this.listeners.set(channel, [...holder.filter(_ref => {\n      let {\n        callback\n      } = _ref;\n      return callback !== listener;\n    })]);\n  }\n  dispatch(channel, payload, source, ampSymbol) {\n    if (typeof channel === 'string' && this.protectedChannels.indexOf(channel) > -1) {\n      const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n      if (!hasAccess) {\n        logger.warn(\"WARNING: \".concat(channel, \" is protected and dispatching on it can have unintended consequences\"));\n      }\n    }\n    const capsule = {\n      channel,\n      payload: _objectSpread({}, payload),\n      source,\n      patternInfo: []\n    };\n    try {\n      this._toListeners(capsule);\n    } catch (e) {\n      logger.error(e);\n    }\n  }\n  listen(channel, callback) {\n    let listenerName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'noname';\n    let cb;\n    if (typeof callback !== 'function') {\n      throw new AmplifyError({\n        name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n        message: 'No callback supplied to Hub'\n      });\n    } else {\n      // Needs to be casted as a more generic type\n      cb = callback;\n    }\n    let holder = this.listeners.get(channel);\n    if (!holder) {\n      holder = [];\n      this.listeners.set(channel, holder);\n    }\n    holder.push({\n      name: listenerName,\n      callback: cb\n    });\n    return () => {\n      this._remove(channel, cb);\n    };\n  }\n  _toListeners(capsule) {\n    const {\n      channel,\n      payload\n    } = capsule;\n    const holder = this.listeners.get(channel);\n    if (holder) {\n      holder.forEach(listener => {\n        logger.debug(\"Dispatching to \".concat(channel, \" with \"), payload);\n        try {\n          listener.callback(capsule);\n        } catch (e) {\n          logger.error(e);\n        }\n      });\n    }\n  }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nconst Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nconst HubInternal = new HubClass('internal-hub');\nexport { AMPLIFY_SYMBOL, Hub, HubClass, HubInternal };","map":{"version":3,"names":["AMPLIFY_SYMBOL","Symbol","logger","ConsoleLogger","HubClass","constructor","name","listeners","Map","protectedChannels","_remove","channel","listener","holder","get","warn","concat","set","filter","_ref","callback","dispatch","payload","source","ampSymbol","indexOf","hasAccess","capsule","_objectSpread","patternInfo","_toListeners","e","error","listen","listenerName","arguments","length","undefined","cb","AmplifyError","NO_HUBCALLBACK_PROVIDED_EXCEPTION","message","push","forEach","debug","Hub","HubInternal"],"sources":["/home/truongnvops/Documents/Project_AWS/tdhva-cooksocial/frontend/node_modules/@aws-amplify/core/src/Hub/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '../Logger';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants';\nimport { AmplifyError } from '../errors';\nexport const AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nexport class HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nexport const Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nexport const HubInternal = new HubClass('internal-hub');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}